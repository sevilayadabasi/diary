
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=INFO

spring.thymeleaf.cache = false
spring.thymeleaf.mode = html

security.basic.enabled = false
server.context-path = /
server.port = 8082


# ===============================
# DATA SOURCE
# ===============================

# Connection url for database
spring.datasource.url = ${JDBC_DATABASE_URL:jdbc:mysql://localhost:3306/diarydb?useUnicode=yes&characterEncoding=UTF-8}

# Username and password
spring.datasource.username = ${JDBC_DATABASE_USERNAME}
spring.datasource.password = ${JDBC_DATABASE_PASSWORD}

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.datasource.dataSourceClassName = com.mysql.jdbc.jdbc2.optional.MysqlDataSource

# ===============================
# JPA-HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update) : with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

